# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
 branches:
   include:
     - master
 paths:
   include:
     - ProjectF.Api/ProjectF.Api.csproj
   exclude:
     - ProjectF.WebUI/ProjectF.WebUI.csproj
pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET sdk 5.x'
  inputs:
    packageType: 'sdk'
    version: '5.0.101'
    includePreviewVersions: true

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/ProjectF.Api.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/ProjectF.Api.csproj' 
    arguments: '-r linux-x64 -c Release --output $(build.artifactstagingdirectory)'
    zipAfterPublish: true

- task: efcore-migration-script-generator-task@0
  displayName: 'Ef Core Migrations'
  inputs:
    installDependencies: true # required for net 3.1+
    projectPath: '$(Build.SourcesDirectory)/ProjectF.Data/ProjectF.Data.csproj' # path to project that has your DbContext
    databaseContexts: '_AppDbContext'
    startupprojectpath: '$(Build.SourcesDirectory)/ProjectF.Api/ProjectF.Api.csproj' 
    targetfolder: '$(build.ArtifactStagingDirectory)/migrations'

- task: PublishBuildArtifacts@1
  displayName: 'publish web api artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: project-f.webapi

- task: PublishPipelineArtifact@1
  displayName: 'Publish  ef core migrations'
  inputs:
    targetPath: '$(build.ArtifactStagingDirectory)/migrations'
    artifact: 'migrations'
  
